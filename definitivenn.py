# -*- coding: utf-8 -*-
"""DefinitiveNN.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Zo6eiowgJPdJ5dzm6bToQJnW9gYtTVVd
"""

import tensorflow.keras as kr
import numpy as np
import pandas as pd
from sklearn import preprocessing

df = pd.read_csv('https://raw.githubusercontent.com/vvsvictor/HackUPC22/master/data.csv')
df.head()

X = df.drop(columns=['id', 'model', 'version', 'sell_price', 'purchase_price'])
Y = df[['sell_price']]
yearmin = X['year'].min()
yearmax = X['year'].max()
kmmin = X['km'].min()
kmmax = X['km'].max()
X['year'] = (X['year'] - yearmin) / (yearmax - yearmin)
X['km'] = (X['km'] - kmmin) / (kmmax - kmmin)
ymax = Y.max()
ymin = Y.min()
Y = (Y - ymin) / (ymax - ymin)
le = preprocessing.LabelEncoder()
X['brand'] = le.fit_transform(X['brand'])

X.head()

model= kr.Sequential()

model.add(kr.layers.Dense(3, activation='relu', input_shape=(3, )))
model.add(kr.layers.Dense(7, activation='relu'))
model.add(kr.layers.Dense(10, activation='relu'))
model.add(kr.layers.Dense(5, activation='relu'))
model.add(kr.layers.Dense(1))

lr = 0.001 #Learning rate
model.compile(loss='mse', optimizer=kr.optimizers.SGD(lr=lr), metrics=['acc'])

history = model.fit(X,Y, epochs= 250)

predictBrand = 'YAMAHA'
predictYear = 2018
predictKm = 40000

brand = le.transform([predictBrand])[0]

year = (predictYear - yearmin) / (yearmax - yearmin)
km = (predictKm - kmmin) / (kmmax - kmmin)
print(brand)
print(year)
print(km)
val = model.predict([[float(brand), year,km]])
val = val.reshape(val.shape[0]) *(ymax-ymin)+ymin
val